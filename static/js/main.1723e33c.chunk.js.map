{"version":3,"sources":["logo.jpg","components/Header.js","components/Footer.js","components/PostList.js","components/PostItem.js","actions/postAction.js","actions/types.js","components/AddPostForm.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","Header","props","className","Footer","href","target","rel","Date","getFullYear","src","logo","alt","PostList","Component","this","fetchPosts","nextProps","newPost","posts","unshift","postItems","map","post","key","id","title","body","connect","state","items","item","dispatch","console","log","fetch","then","res","json","type","payload","AddPostForm","onChange","bind","onSubmit","e","setState","name","value","preventDefault","createPost","postData","method","headers","JSON","stringify","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","library","add","fab","faTrashAlt","faCalendarCheck","faCalendarPlus","faCalendarAlt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1723e33c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.56688d3d.jpg\";","import React from 'react';\r\n\r\n import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <header className=\"app-header\">\r\n            {/*<div className=\"header-logo\"><FontAwesomeIcon icon=\"calendar-alt\"/></div>*/}\r\n            <div className=\"header-heading\"><h1>API Post Reader</h1></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport logo from \"../logo.jpg\";\n\nfunction Footer(props) {\n\n    return (\n        <footer>\n            <a href=\"http://yuwebdesign.tarima.org/\"\n               target=\"_blank\" rel=\"noopener noreferrer\"\n            >\n                &copy;&nbsp;YuWebdes!gn&nbsp;\n                {/*2019 - */}{new Date().getFullYear()}\n            </a>\n            <a href=\"http://yuwebdesign.tarima.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={logo} className=\"App-logo img-fluid\"\n                     alt=\"logo\"/>\n            </a>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport PostItem from \"./PostItem\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchPosts} from \"../actions/postAction\";\r\n\r\n\r\nclass PostList extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.newPost) {\r\n            this.props.posts.unshift(nextProps.newPost);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const postItems = this.props.posts.map(post => (\r\n            <div className=\"row content border p-3 m-3\"\r\n                 key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n                <p>\r\n                    <button>Edit</button>\r\n                    <button>Delete</button>\r\n                </p>\r\n            </div>\r\n        ));\r\n        return (\r\n            <div>\r\n                {postItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPostList.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n    newPost: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items,\r\n    newPost: state.posts.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\r\n","import React, {Component} from 'react';\r\n\r\nclass PostItem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostItem;","import { FETCH_POSTS, NEW_POST } from './types';\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n    console.log('fetchPosts in postAction');\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(posts =>\r\n            dispatch({\r\n                type: FETCH_POSTS,\r\n                payload: posts\r\n            })\r\n        );\r\n};\r\n\r\nexport const createPost = postData => dispatch => {\r\n    console.log('createPost in postAction');\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(post =>\r\n            dispatch({\r\n                type: NEW_POST,\r\n                payload: post\r\n            })\r\n        );\r\n};","export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const NEW_POST = 'NEW_POST';","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from \"../actions/postAction\";\r\n\r\nclass AddPostForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            title: this.state.title,\r\n            body: this.state.body\r\n        };\r\n\r\n        this.props.createPost(post);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"row content border p-3 m-3\">\r\n                <h1>Add Post</h1>\r\n\r\n                <form className=\"form-inline\" onSubmit={this.onSubmit}>\r\n                    <div\r\n                        // className=\"form-row align-items-center\"\r\n                         className=\"form-group mb-2\"\r\n                    >\r\n\r\n                        <label>Title: </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.title}\r\n                        />\r\n                        <label>Text: </label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            name=\"body\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.body}\r\n                        />\r\n                        <button type=\"submit\"\r\n                                // className=\"btn btn-primary mb-2\"\r\n                        >Add Post\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddPostForm.propTypes = {\r\n    createPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {createPost})(AddPostForm);","import {FETCH_POSTS, NEW_POST} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],//post coming from fetch action\r\n    item: {}//single post we add after get the response back\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_POSTS:\r\n            // console.log('fectching in postReducer');\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case NEW_POST:\r\n            //console.log('newPost in postReducer');\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport postReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';//comes from index.js\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React, {Component} from 'react';\n// import { connect } from 'react-redux';\nimport {createPost} from \"./actions/postAction\";\nimport {Provider} from \"react-redux\";\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PostList from \"./components/PostList\";\nimport AddPostForm from \"./components/AddPostForm\";\nimport store from './store';\nimport ReactDOM from 'react-dom';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fab} from '@fortawesome/free-brands-svg-icons';\nimport {\n    faTrashAlt,\n    faCalendarCheck,\n    faCalendarPlus,\n    faCalendarAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(fab, faTrashAlt, faCalendarCheck, faCalendarPlus, faCalendarAlt);\n\n// const resetPosts = () => {\n//     fetch('http://jsonplaceholder.typicode.com/posts')\n//         .then(res => res.json())\n//            .then(data => this.setState({posts: data}));\n// }\n// const store = createStore(() => [], {}, applyMiddleware());\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Header/>\n                    <div className=\"container main-container\">\n                        <div className=\"container\">\n                            <div className=\"row p-3 m-3\">\n                                <h1>Posts</h1>\n                            </div>\n                            <AddPostForm/>\n                            <PostList/>\n                        </div>\n                    </div>\n                    {/*<ConfirmationModal show post></ConfirmationModal>*/}\n                    <Footer/>\n                </div>\n            </Provider>\n        );\n    }\n\n}\n\nexport default App;\n\n// import React, {useState, useEffect} from 'react';\n//\n// function App() {\n//     const [posts, setPosts] = useState([]);\n//     console.log(posts);\n//\n//     useEffect(() => {\n//         getPosts();\n//     }, []);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}